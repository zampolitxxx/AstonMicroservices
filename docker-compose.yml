#version: '3.8'
#
#services:
#  service1:
#    build:
#      context: ./service1
#      dockerfile: Dockerfile
#    ports:
#      - "8081:8081"
#    depends_on:
#      - service1-db
#      - service2
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://service1-db:5432/service1
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - SERVICE2_URL=http://service2:8082
#    networks:
#      - microservices-network
#
#  service1-db:
#    image: postgres:15
#    environment:
#      - POSTGRES_DB=service1
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    ports:
#      - "5433:5432"
#    volumes:
#      - service1-data:/var/lib/postgresql/data
#    networks:
#      - microservices-network
#
#  service2:
#    build:
#      context: ./service2
#      dockerfile: Dockerfile
#    ports:
#      - "8082:8082"
#    depends_on:
#      - service2-db
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://service2-db:5432/service2
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#    networks:
#      - microservices-network
#
#  service2-db:
#    image: postgres:15
#    environment:
#      - POSTGRES_DB=service2
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    ports:
#      - "5434:5432"
#    volumes:
#      - service2-data:/var/lib/postgresql/data
#    networks:
#      - microservices-network
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.5.0
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#
#    kafka:
#      image: confluentinc/cp-kafka:7.5.0
#      depends_on:
#        - zookeeper
#      ports:
#        - "9092:9092"
#      environment:
#        KAFKA_BROKER_ID: 1
#        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      networks:
#        - microservices-network
#
#networks:
#  microservices-network:
#    driver: bridge
#
#volumes:
#  service1-data:
#  service2-data:

version: '3.8'

services:
  service1:
    build:
      context: ./service1
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - service1-db
      - service2
      - kafka  # Добавляем зависимость от Kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service1-db:5432/service1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICE2_URL=http://service2:8082
    networks:
      - microservices-network

  service1-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=service1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - service1-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  service2:
    build:
      context: ./service2
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - service2-db
      - kafka  # Добавляем зависимость от Kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service2-db:5432/service2
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # URL для подключения к Kafka
    networks:
      - microservices-network

  service2-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=service2
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    volumes:
      - service2-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  service1-data:
  service2-data: